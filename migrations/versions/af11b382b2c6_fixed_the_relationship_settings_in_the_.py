"""Fixed the relationship settings in the recipes table model

Revision ID: af11b382b2c6
Revises: da2325b0c4ac
Create Date: 2024-07-13 05:35:28.772828

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'af11b382b2c6'
down_revision = 'da2325b0c4ac'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.drop_column('continent_name')

    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.alter_column('instructions',
                              type_=sa.ARRAY(sa.String),
                              postgresql_using='instructions::character varying[]',
                              existing_type=sa.Text)
        batch_op.drop_constraint('recipes_how_to_cook_fkey', type_='foreignkey')
        batch_op.drop_constraint('recipes_utensils_fkey', type_='foreignkey')
        batch_op.drop_constraint('recipes_ingredients_fkey', type_='foreignkey')
        batch_op.drop_column('utensils')
        batch_op.drop_column('how_to_cook')
        batch_op.drop_column('ingredients')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('recipes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ingredients', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('how_to_cook', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('utensils', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key('recipes_ingredients_fkey', 'ingredient_details', ['ingredients'], ['id'])
        batch_op.create_foreign_key('recipes_utensils_fkey', 'cooking_utensils', ['utensils'], ['id'])
        batch_op.create_foreign_key('recipes_how_to_cook_fkey', 'how_to_cooks', ['how_to_cook'], ['id'])
        batch_op.alter_column('instructions',
                              type_=sa.Text,
                              postgresql_using='instructions::text',
                              existing_type=sa.ARRAY(sa.String))

    with op.batch_alter_table('country', schema=None) as batch_op:
        batch_op.add_column(sa.Column('continent_name', sa.VARCHAR(), autoincrement=False, nullable=True))

    # ### end Alembic commands ###
